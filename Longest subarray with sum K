class Solution:
    def longestSubarray(self, nums, k):
        prefix_sum = 0
        prefix_map = {}  # stores prefix_sum: earliest index
        max_len = 0

        for i in range(len(nums)):
            prefix_sum += nums[i]

            if prefix_sum == k:
                max_len = i + 1  # subarray from 0 to i

            # If (prefix_sum - k) seen before, subarray exists
            if (prefix_sum - k) in prefix_map:
                max_len = max(max_len, i - prefix_map[prefix_sum - k])

            # Only store first occurrence
            if prefix_sum not in prefix_map:
                prefix_map[prefix_sum] = i

        return max_len
